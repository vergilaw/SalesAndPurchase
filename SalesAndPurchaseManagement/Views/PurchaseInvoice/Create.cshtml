@model SalesAndPurchaseManagement.Models.PurchaseInvoice

@{
    ViewData["Title"] = "Tạo mới hóa đơn nhập";
    Layout = "~/Views/Shared/MyLayoutHelper.cshtml";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Create" method="post">
    <!-- Chọn nhà cung cấp -->
    <div class="form-group">
        <label for="SupplierId">Chọn nhà cung cấp:</label>
        <select asp-for="SupplierId" class="form-control select2bs4" asp-items="ViewBag.Suppliers" id="SupplierId">
            <option value="" disabled selected>-- Chọn nhà cung cấp --</option>
        </select>
        <span class="text-danger">@Html.ValidationMessageFor(m => m.SupplierId)</span>
    </div>

    <!-- Thông tin nhà cung cấp -->
    <div class="card mt-3">
        <div class="card-header">
            <h3 class="card-title">Thông tin nhà cung cấp</h3>
        </div>
        <div class="card-body p-0">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Mã</th>
                        <th>Tên</th>
                        <th>Địa chỉ</th>
                        <th>Số điện thoại</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td id="SupplierIdDisplay">--</td>
                        <td id="SupplierName">--</td>
                        <td id="Address">--</td>
                        <td id="PhoneNumber">--</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Chọn sản phẩm -->
    <div class="form-group">
        <label for="ProductId">Chọn sản phẩm:</label>
        <select id="ProductId" class="form-control select2bs4">
            <option value="" disabled selected>-- Chọn sản phẩm --</option>
            @foreach (var product in ViewBag.Products)
            {
                <option value="@product.Value">@product.Text</option>
            }
        </select>
        <span class="text-danger" id="ProductError" style="display: none;">Vui lòng chọn sản phẩm.</span>
    </div>

    <!-- Thông tin sản phẩm cần thêm -->
    <div class="card mt-3">
        <div class="card-header">
            <h3 class="card-title">Thông tin sản phẩm cần thêm</h3>
        </div>
        <div class="card-body p-0">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID Sản Phẩm</th>
                        <th>Tên Sản Phẩm</th>
                        <th>Số Lượng</th>
                        <th>Đơn Giá</th>
                        <th>Giảm Giá (%)</th>
                        <th></th> <!-- Cột cho nút Thêm sản phẩm -->
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td id="SelectedProductId">--</td>
                        <td id="SelectedProductName">--</td>
                        <td>
                            <input type="number" class="form-control" id="ProductQuantity" min="1" placeholder="Nhập số lượng" />
                            <span class="text-danger" id="QuantityError" style="display: none;">Vui lòng nhập số lượng.</span>
                        </td>
                        <td>
                            <input type="number" class="form-control" id="ProductUnitPrice" min="0" placeholder="Nhập đơn giá" />
                        </td>
                        <td>
                            <input type="number" class="form-control" id="ProductDiscount" min="0" max="100" placeholder="Nhập giảm giá (%) nếu có" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary" id="AddProductButton">Thêm sản phẩm</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Danh sách sản phẩm đã chọn -->
    <div class="card mt-3">
        <div class="card-header">
            <h3 class="card-title">Danh sách sản phẩm đã chọn</h3>
        </div>
        <div class="card-body p-0">
            <table class="table table-striped" id="ProductDetailsTable">
                <thead>
                    <tr>
                        <th>ID Sản Phẩm</th>
                        <th>Tên Sản Phẩm</th>
                        <th>Số Lượng</th>
                        <th>Đơn Giá</th>
                        <th>Giảm Giá (%)</th>
                        <th>Thành Tiền</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="SelectedProductTableBody">
                    <!-- Các sản phẩm đã thêm sẽ hiển thị tại đây -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Tổng tiền -->
    <div class="card-footer">
        <h4>Tổng Tiền: <span id="TotalAmount">0</span> VNĐ</h4>
    </div>

    <!-- Nút lưu hóa đơn -->
    <button type="submit" class="btn btn-success mt-3">Lưu hóa đơn</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize Select2
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });

            var nextIndex = 0;

            // Load supplier info when supplier selection changes
            $('#SupplierId').change(function () {
                var supplierId = $(this).val();
                if (supplierId) {
                    $.ajax({
                        url: '@Url.Action("GetSupplierInfo", "PurchaseInvoice")',
                        data: { supplierId: supplierId },
                        success: function (data) {
                            $('#SupplierIdDisplay').text(data.supplierId);
                            $('#SupplierName').text(data.supplierName);
                            $('#Address').text(data.address);
                            $('#PhoneNumber').text(data.phoneNumber);
                        },
                        error: function () {
                            $('#SupplierIdDisplay, #SupplierName, #Address, #PhoneNumber').text('--');
                        }
                    });
                } else {
                    $('#SupplierIdDisplay, #SupplierName, #Address, #PhoneNumber').text('--');
                }
            });

            // Load product information when a product is selected
            $('#ProductId').change(function () {
                var productId = $(this).val();
                if (productId) {
                    $.ajax({
                        url: '@Url.Action("GetProductInfo", "PurchaseInvoice")',
                        data: { productId: productId },
                        success: function (data) {
                            if (data) {
                                $('#SelectedProductId').text(data.productId);
                                $('#SelectedProductName').text(data.productName);
                                $('#ProductUnitPrice').val(data.purchasePrice);
                                $('#ProductDiscount').val('0');
                                $('#ProductQuantity').val('');
                            }
                        },
                        error: function () {
                            $('#SelectedProductId, #SelectedProductName').text('--');
                            $('#ProductUnitPrice, #ProductDiscount, #ProductQuantity').val('');
                        }
                    });
                } else {
                    $('#SelectedProductId, #SelectedProductName').text('--');
                    $('#ProductUnitPrice, #ProductDiscount, #ProductQuantity').val('');
                }
            });

            // Handle adding products to the invoice
            $('#AddProductButton').click(function () {
                var productId = $('#SelectedProductId').text();
                var productName = $('#SelectedProductName').text();
                var quantity = parseInt($('#ProductQuantity').val());
                var unitPrice = parseFloat($('#ProductUnitPrice').val());
                var discount = parseInt($('#ProductDiscount').val()) || 0;

                if (!productId || productId === '--') {
                    $('#ProductError').show();
                    return;
                } else {
                    $('#ProductError').hide();
                }

                if (isNaN(quantity) || quantity <= 0) {
                    $('#QuantityError').show();
                    return;
                } else {
                    $('#QuantityError').hide();
                }

                // Calculate total amount
                var totalAmount = quantity * unitPrice * (100 - discount) / 100;

                // Check if product is already added
                var existingRow = $('#SelectedProductTableBody').find(`input[name$='ProductId'][value='${productId}']`);
                if (existingRow.length > 0) {
                    alert('Sản phẩm này đã được thêm.');
                    return;
                }

                // Append the product to the table with the correct index
                $('#SelectedProductTableBody').append(`
                            <tr data-index="${nextIndex}">
                                <td>${productId}<input type="hidden" name="invoiceDetails[${nextIndex}].ProductId" value="${productId}" /></td>
                                <td>${productName}</td>
                                <td><input type="number" class="form-control quantity-input" name="invoiceDetails[${nextIndex}].Quantity" value="${quantity}" min="1" /></td>
                                <td><input type="number" class="form-control unitprice-input" name="invoiceDetails[${nextIndex}].UnitPrice" value="${unitPrice}" min="0" /></td>
                                <td><input type="number" class="form-control discount-input" name="invoiceDetails[${nextIndex}].Discount" value="${discount}" min="0" max="100" /></td>
                                <td class="total-amount-cell">${totalAmount.toFixed(2)}</td>
                                <td><button type="button" class="btn btn-danger RemoveProductButton">Xóa</button></td>
                            </tr>
                        `);

                nextIndex++; // Increment the index for the next product

                updateTotalAmount();

                // Clear product selection
                $('#ProductId').val('').trigger('change');
                $('#SelectedProductId').text('--');
                $('#SelectedProductName').text('--');
                $('#ProductUnitPrice').val('');
                $('#ProductDiscount').val('');
                $('#ProductQuantity').val('');
            });

            // Handle removing products from the invoice
            $('#SelectedProductTableBody').on('click', '.RemoveProductButton', function () {
                $(this).closest('tr').remove();
                updateTotalAmount();
            });

            // Update total amount when quantity, unit price, or discount changes
            $('#SelectedProductTableBody').on('input', '.quantity-input, .unitprice-input, .discount-input', function () {
                var row = $(this).closest('tr');
                var quantity = parseInt(row.find('.quantity-input').val()) || 0;
                var unitPrice = parseFloat(row.find('.unitprice-input').val()) || 0;
                var discount = parseInt(row.find('.discount-input').val()) || 0;

                var totalAmount = quantity * unitPrice * (100 - discount) / 100;
                row.find('.total-amount-cell').text(totalAmount.toFixed(2));

                updateTotalAmount();
            });

            function updateTotalAmount() {
                var total = 0;
                $('#SelectedProductTableBody tr').each(function () {
                    var amount = parseFloat($(this).find('.total-amount-cell').text()) || 0;
                    total += amount;
                });
                $('#TotalAmount').text(total.toFixed(2));
            }
        });
    </script>
}
